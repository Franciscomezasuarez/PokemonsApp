{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tuf\\\\Desktop\\\\Pokemon-Final-20220721\\\\src\\\\List\\\\List.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { getPokemonData, getPokemons } from \"../api\";\nimport Card from \"../Card/Card\";\nimport { searchPokemon } from \"../api\";\nimport Searchbar from \"../searchbar/Searchbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst List = props => {\n  _s();\n\n  const [pokemons, setPokemons] = useState([]);\n  const [notFound, setNotFound] = useState(false);\n\n  const fetchPokemmons = async () => {\n    try {\n      const data = await getPokemons();\n      console.log(data.results);\n      const promises = data.results.map(async pokemon => {\n        return await getPokemonData(pokemon.url);\n      });\n      const results = await Promise.all(promises);\n      setPokemons(results);\n    } catch (err) {}\n  };\n\n  const onSearch = async pokemon => {\n    const result = await searchPokemon(pokemon);\n\n    if (!result) {\n      setNotFound(true);\n      return;\n    } else {\n      setPokemons([result]);\n    }\n  };\n\n  useEffect(() => {\n    fetchPokemmons('https://pokeapi.co/api/v2/pokemon?limit=100000&offset=0').then(res => res.json()).then(data => {\n      console.log(data);\n      setPokemons(data.results);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Searchbar, {\n        onSearch: onSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), \"Lista de Pokemones ! \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 34\n    }, this), pokemons.map((pokemon, idx) => {\n      return /*#__PURE__*/_jsxDEV(Card, {\n        pokemon: pokemon\n      }, pokemon.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }, this);\n    })]\n  }, void 0, true);\n};\n\n_s(List, \"8j14Dk7CyL7F9OQYkZ+4VMDauY8=\");\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["React","useEffect","useState","getPokemonData","getPokemons","Card","searchPokemon","Searchbar","List","props","pokemons","setPokemons","notFound","setNotFound","fetchPokemmons","data","console","log","results","promises","map","pokemon","url","Promise","all","err","onSearch","result","then","res","json","idx","name"],"sources":["C:/Users/Tuf/Desktop/Pokemon-Final-20220721/src/List/List.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport { getPokemonData, getPokemons } from \"../api\"\nimport Card from \"../Card/Card\"\nimport { searchPokemon } from \"../api\";\nimport Searchbar from \"../searchbar/Searchbar\";\n\n\n\n\nconst List = (props) => {\n    \n    const [pokemons, setPokemons] = useState([]);\n    const [notFound, setNotFound] = useState(false);\n\n    const fetchPokemmons = async () => {\n        try {\n            const data = await getPokemons();\n            console.log(data.results);\n            const promises = data.results.map(async (pokemon) => {\n                return await getPokemonData(pokemon.url)\n            })\n            const results = await Promise.all(promises)\n            setPokemons(results)\n        } catch(err){\n    \n        }\n    }\n\n    const onSearch = async (pokemon) => {\n        const result = await searchPokemon(pokemon);\n        if (!result) {\n            setNotFound(true);\n            return;\n        } else {\n            setPokemons([result]);\n        }\n        \n    };\n\n\n    useEffect( () => {\n        fetchPokemmons('https://pokeapi.co/api/v2/pokemon?limit=100000&offset=0')\n            .then(res => res.json())\n            .then( (data) => {\n                console.log(data)\n                setPokemons(data.results)\n            })\n    }, [])\n\n\n    return (\n        <>\n            <div>\n              <Searchbar onSearch={onSearch} />\n            </div>\n            Lista de Pokemones ! <br />\n            { pokemons.map( (pokemon, idx) => {\n                return (<Card pokemon={pokemon} key={pokemon.name}/>)\n            } ) }\n        </>\n    )\n}\n\nexport default List\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,cAAT,EAAyBC,WAAzB,QAA4C,QAA5C;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,SAASC,aAAT,QAA8B,QAA9B;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;;;AAKA,MAAMC,IAAI,GAAIC,KAAD,IAAW;EAAA;;EAEpB,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,KAAD,CAAxC;;EAEA,MAAMY,cAAc,GAAG,YAAY;IAC/B,IAAI;MACA,MAAMC,IAAI,GAAG,MAAMX,WAAW,EAA9B;MACAY,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,OAAjB;MACA,MAAMC,QAAQ,GAAGJ,IAAI,CAACG,OAAL,CAAaE,GAAb,CAAiB,MAAOC,OAAP,IAAmB;QACjD,OAAO,MAAMlB,cAAc,CAACkB,OAAO,CAACC,GAAT,CAA3B;MACH,CAFgB,CAAjB;MAGA,MAAMJ,OAAO,GAAG,MAAMK,OAAO,CAACC,GAAR,CAAYL,QAAZ,CAAtB;MACAR,WAAW,CAACO,OAAD,CAAX;IACH,CARD,CAQE,OAAMO,GAAN,EAAU,CAEX;EACJ,CAZD;;EAcA,MAAMC,QAAQ,GAAG,MAAOL,OAAP,IAAmB;IAChC,MAAMM,MAAM,GAAG,MAAMrB,aAAa,CAACe,OAAD,CAAlC;;IACA,IAAI,CAACM,MAAL,EAAa;MACTd,WAAW,CAAC,IAAD,CAAX;MACA;IACH,CAHD,MAGO;MACHF,WAAW,CAAC,CAACgB,MAAD,CAAD,CAAX;IACH;EAEJ,CATD;;EAYA1B,SAAS,CAAE,MAAM;IACba,cAAc,CAAC,yDAAD,CAAd,CACKc,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEYb,IAAD,IAAU;MACbC,OAAO,CAACC,GAAR,CAAYF,IAAZ;MACAJ,WAAW,CAACI,IAAI,CAACG,OAAN,CAAX;IACH,CALL;EAMH,CAPQ,EAON,EAPM,CAAT;EAUA,oBACI;IAAA,wBACI;MAAA,uBACE,QAAC,SAAD;QAAW,QAAQ,EAAEQ;MAArB;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADJ,wCAIyB;MAAA;MAAA;MAAA;IAAA,QAJzB,EAKMhB,QAAQ,CAACU,GAAT,CAAc,CAACC,OAAD,EAAUU,GAAV,KAAkB;MAC9B,oBAAQ,QAAC,IAAD;QAAM,OAAO,EAAEV;MAAf,GAA6BA,OAAO,CAACW,IAArC;QAAA;QAAA;QAAA;MAAA,QAAR;IACH,CAFC,CALN;EAAA,gBADJ;AAWH,CApDD;;GAAMxB,I;;KAAAA,I;AAsDN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}