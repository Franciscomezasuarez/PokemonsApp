{"ast":null,"code":"export const searchPokemon = async pokemon => {\n  try {\n    let url = `https://pokeapi.co/api/v2/pokemon/${pokemon}`;\n    const response = await fetch(url);\n    const data = await response.json();\n    return data;\n  } catch (err) {}\n};\nexport const getPokemons = async function () {\n  let limit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 151;\n  let offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n  try {\n    let url = `https://pokeapi.co/api/v2/pokemon?limit=${limit}&offset=${offset}`;\n    const response = await fetch(url);\n    const data = await response.json();\n    return data;\n  } catch (err) {}\n};\nexport const getPokemonData = async url => {\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n    return data;\n  } catch (err) {}\n};\nexport const GetPokemon = pokemon => async dispatch => {\n  try {\n    dispatch({\n      type: \"POKEMON_MULTIPLE_LOADING\"\n    });\n    const res = await axios.get(`https://pokeapi.co/api/v2/pokemon/${pokemon}`);\n    dispatch({\n      type: \"POKEMON_MULTIPLE_SUCCESS\",\n      payload: res.data,\n      pokemonName: pokemon\n    });\n  } catch (e) {\n    dispatch({\n      type: \"POKEMON_MULTIPLE_FAIL\"\n    });\n  }\n};","map":{"version":3,"names":["searchPokemon","pokemon","url","response","fetch","data","json","err","getPokemons","limit","offset","getPokemonData","GetPokemon","dispatch","type","res","axios","get","payload","pokemonName","e"],"sources":["C:/Users/Tuf/Desktop/Pokemon-Final-20220721/src/api.js"],"sourcesContent":["\r\nexport const searchPokemon = async (pokemon) => {\r\n    try {\r\n        let url = `https://pokeapi.co/api/v2/pokemon/${pokemon}`\r\n        const response = await fetch(url)\r\n        const data = await response.json()\r\n        return data;\r\n    } catch(err) {}\r\n};\r\n\r\nexport const getPokemons = async (limit = 151, offset = 0) => {\r\n    try{\r\n        let url = `https://pokeapi.co/api/v2/pokemon?limit=${limit}&offset=${offset}`;\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        return data;\r\n    } catch (err) {}\r\n};\r\n\r\nexport const getPokemonData = async (url) => {\r\n    try {\r\n        const response = await fetch(url)\r\n        const data = await response.json()\r\n        return data;\r\n    } catch(err){}\r\n}\r\n\r\nexport const GetPokemon = (pokemon) => async dispatch => {\r\n    try {\r\n      dispatch({\r\n        type: \"POKEMON_MULTIPLE_LOADING\"\r\n      });\r\n  \r\n      const res = await axios.get(`https://pokeapi.co/api/v2/pokemon/${pokemon}`);\r\n  \r\n      dispatch({\r\n        type: \"POKEMON_MULTIPLE_SUCCESS\",\r\n        payload: res.data,\r\n        pokemonName: pokemon\r\n      })\r\n    } catch (e) {\r\n      dispatch({\r\n        type: \"POKEMON_MULTIPLE_FAIL\",\r\n      })\r\n    }\r\n  };"],"mappings":"AACA,OAAO,MAAMA,aAAa,GAAG,MAAOC,OAAP,IAAmB;EAC5C,IAAI;IACA,IAAIC,GAAG,GAAI,qCAAoCD,OAAQ,EAAvD;IACA,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;IACA,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;IACA,OAAOD,IAAP;EACH,CALD,CAKE,OAAME,GAAN,EAAW,CAAE;AAClB,CAPM;AASP,OAAO,MAAMC,WAAW,GAAG,kBAAmC;EAAA,IAA5BC,KAA4B,uEAApB,GAAoB;EAAA,IAAfC,MAAe,uEAAN,CAAM;;EAC1D,IAAG;IACC,IAAIR,GAAG,GAAI,2CAA0CO,KAAM,WAAUC,MAAO,EAA5E;IACA,MAAMP,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;IACA,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;IACA,OAAOD,IAAP;EACH,CALD,CAKE,OAAOE,GAAP,EAAY,CAAE;AACnB,CAPM;AASP,OAAO,MAAMI,cAAc,GAAG,MAAOT,GAAP,IAAe;EACzC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;IACA,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;IACA,OAAOD,IAAP;EACH,CAJD,CAIE,OAAME,GAAN,EAAU,CAAE;AACjB,CANM;AAQP,OAAO,MAAMK,UAAU,GAAIX,OAAD,IAAa,MAAMY,QAAN,IAAkB;EACrD,IAAI;IACFA,QAAQ,CAAC;MACPC,IAAI,EAAE;IADC,CAAD,CAAR;IAIA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACC,GAAN,CAAW,qCAAoChB,OAAQ,EAAvD,CAAlB;IAEAY,QAAQ,CAAC;MACPC,IAAI,EAAE,0BADC;MAEPI,OAAO,EAAEH,GAAG,CAACV,IAFN;MAGPc,WAAW,EAAElB;IAHN,CAAD,CAAR;EAKD,CAZD,CAYE,OAAOmB,CAAP,EAAU;IACVP,QAAQ,CAAC;MACPC,IAAI,EAAE;IADC,CAAD,CAAR;EAGD;AACF,CAlBI"},"metadata":{},"sourceType":"module"}